from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, CommandHandler, ContextTypes

OWNER_ID = 762204827  # —Ç–≤–æ–π Telegram ID

message_mapping = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    bot_username = (await context.bot.get_me()).username
    personal_link = f"https://t.me/{bot_username}?start={user.id}"

    welcome_message = (
        "–ü—Ä–∏–≤–µ—Ç! –ó–∞–¥–∞–π –º–Ω–µ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∞–Ω–æ–Ω–∏–º–Ω–æ, –∏ –∂–¥–∏ –æ—Ç–≤–µ—Ç! üëá\n"
        f"–ê –≤–æ—Ç —Ç–≤–æ—è —É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:\n{personal_link}"
    )
    await update.message.reply_text(welcome_message)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    msg = update.message

    if user.id == OWNER_ID and msg.reply_to_message:
        original_id = msg.reply_to_message.message_id
        if original_id in message_mapping:
            recipient_id = message_mapping[original_id]
            await context.bot.copy_message(chat_id=recipient_id, from_chat_id=msg.chat.id, message_id=msg.message_id)
            await msg.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
        else:
            await msg.reply_text("‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—É—á–∞—Ç–µ–ª—è.")
    elif user.id != OWNER_ID:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –≤–ª–∞–¥–µ–ª—å—Ü—É
        info = f"üì© *–ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å!*\n"
        if user.username:
            info += f"_–í–æ–ø—Ä–æ—Å –∑–∞–¥–∞–ª(–∞): @{user.username}_\n"
        else:
            info += "_(–ë–µ–∑ –∏–º–µ–Ω–∏)_\n"

        if msg.text:
            sent = await context.bot.send_message(chat_id=OWNER_ID, text=f"{info}\n{msg.text}", parse_mode="Markdown")
        elif msg.photo:
            file_id = msg.photo[-1].file_id
            caption = msg.caption or ""
            sent = await context.bot.send_photo(chat_id=OWNER_ID, photo=file_id, caption=f"{info}\n{caption}", parse_mode="Markdown")
        elif msg.video:
            file_id = msg.video.file_id
            caption = msg.caption or ""
            sent = await context.bot.send_video(chat_id=OWNER_ID, video=file_id, caption=f"{info}\n{caption}", parse_mode="Markdown")
        else:
            sent = await context.bot.send_message(chat_id=OWNER_ID, text=info, parse_mode="Markdown")

        # –î–ª—è –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        await msg.reply_text("‚úÖ –í–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –ñ–¥–∏ –æ—Ç–≤–µ—Ç–∞!")
        message_mapping[sent.message_id] = user.id
    else:
        await msg.reply_text("–û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏–ª—Å—è.")

if __name__ == '__main__':
    import os
    TOKEN = os.environ.get("BOT_TOKEN")
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_message))

    print("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()
